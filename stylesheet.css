@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');

/*n CSS, the asterisk (*) is known as the universal selector. It matches any element type. */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    text-decoration: none;
    border: none;
    outline: none;
    scroll-behavior: smooth;
    font-family: 'Poppins', sans-serif;
}

/*:root is a pseudo-class selector that represents the highest-level parent element in the document tree*/
:root {
    --bg-color: #1f242d;
    --second-bg-color: #323946;
    --text-color: #fff;
    --main-color: #0ef
}

/*In CSS, the html selector is used to target the root element of an HTML document, which is the <html> element itself.
The * (universal selector) targets all elements in the HTML document but has the lowest specificity. It applies styles to every element unless overridden by more specific selectors.
The html selector targets the root <html> element and has higher specificity than the * selector. Styles applied to the html selector will affect the entire document but can still be overridden by more specific selectors.
*/
html {
    font-size: 62.5%;
    overflow-x: hidden;
}

/* body applies to body if no further specific styling is called */
body {
    background: var(--bg-color);
    color: var(--text-color);
}

section {
    min-height: 100vh;
    padding: 10rem 9% 2rem;
}

.header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    padding: 2rem 9%;
    background: var(--bg-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 100;
}

.header.sticky {
    border-bottom: .1rem solid rgba(0, 0, 0, .2);
}

.logo {
    font-size: 2.5rem;
    color: var(--text-color);
    font-weight: 600;
    cursor: default;
}

/*In CSS, the selector .navbar a targets anchor (<a>) elements specifically within elements that have the class "navbar". */
.navbar a {
    font-size: 1.7rem;
    color: var(--text-color);
    margin-left: 4rem;
}

/* a:hover changes color of words in navbar when you hover cursor over it 
the a.active part will make the current select page remain in changed color on navbar (you have to call the active class)
*/
.navbar a:hover,
.navbar a.active {
    color: var(--main-color);
}

#menu-icon {
    font-size: 3.6rem;
    color: var(--text-color);
    display: none;
}

.home {
    display: flex;
    justify-content: center;
    align-items: center;
}

.home-img img {
    /*Viewport Width (vw): The viewport width represents the width of the browser's viewport, which is the visible portion of the web page. It is expressed as a percentage of the total width of the viewport.
Percentage: The value 60vw means that the width of the element will be 60% of the viewport width. This makes it responsive to the size of the viewport.*/
    width: 40vw;
    margin-left: 40px;
    float: right;
    animation: floatImage 4s ease-in-out infinite;
}

/* Defines how it floats up and down */
@keyframes floatImage {
    0% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-2.5rem);
    }

    100% {
        transform: translateY(0);
    }
}

/* In the CSS rule font-size: 3.2rem;, the 3.2rem value sets the font size to 3.2 times the font size of the root element.*/
.home-content h3 {
    font-size: 3.2rem;
    font-weight: 700;
}


/*
The CSS selector h3:nth-of-type(2) targets the second <h3> element within its parent container with the class .home-content.*/
.home-content h3:nth-of-type(2) {
    margin-bottom: 2rem;
}

span {
    color: var(--main-color)
}

.home-content h1 {
    font-size: 5.6rem;
    font-weight: 700;
    line-height: 1.3;
}

.home-content p {
    font-size: 1.6rem;
}

.social-media a {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 4rem;
    height: 4rem;
    background: transparent;
    border: .2rem solid var(--main-color);
    border-radius: 50%;
    font-size: 2rem;
    color: var(--main-color);
    margin: 3rem 1.5rem 3rem 0;
    transition: .5s ease;
}

/* styling when you hover over social media buttons */
.social-media a:hover {
    background: var(--main-color);
    color: var(--second-bg-color);
    box-shadow: 0 0 1rem;
}

.btn {
    display: inline-block;
    padding: 1rem 2.8rem;
    background: var(--main-color);
    border-radius: 4rem;
    box-shadow: 0 0 1rem var(--main-color);
    font-size: 1.6rem;
    color: var(--second-bg-color);
    letter-spacing: .1rem;
    font-weight: 600;
    transition: .5s ease;
}

.btn:hover {
    box-shadow: none;
}

.phone-icon {
    position: relative;
}

.tooltip {
    visibility: hidden;
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: black;
    color: white;
    padding: 5px;
    border-radius: 3px;
    font-family: Arial, sans-serif;
    font-size: 14px;
    font-weight: bold;
    text-align: center;
    white-space: nowrap;
    /* Prevent text from wrapping */
    display: inline-block;
    /* Display horizontally */
}

.phone-icon:hover .tooltip {
    visibility: visible;
}

.about {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    background: var(--second-bg-color);
}

.about-img img {
    /*Viewport Width (vw): The viewport width represents the width of the browser's viewport, which is the visible portion of the web page. It is expressed as a percentage of the total width of the viewport.
Percentage: The value 60vw means that the width of the element will be 60% of the viewport width. This makes it responsive to the size of the viewport.*/
    width: 50vw;
    margin-right: 40px;
    float: left;
}

.heading {
    text-align: center;
    font-size: 4.5rem;
}

.about-content h2 {
    text-align: left;
    line-height: 1.2;
}

.about-content h3 {
    font-size: 2.6rem;
}

.about-content p {
    font-size: 1.3rem;
    margin: 2rem 0 3rem;
}

.about-content p strong {
    font-size: 1.6rem;
}


.services h2 {
    margin-bottom: 5rem;
}

.services-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 2rem;
}

/* This means that the styles inside .services-box will only be applied to elements with the class .services-box that are nested within an element with the class .services-container. */
.services-container .services-box {
    flex: 1 1 30rem;
    background: var(--second-bg-color);
    padding: 3rem 2rem 4rem;
    border-radius: 2rem;
    text-align: center;
    border: .2rem solid var(--bg-color);
}

.services-container .services-box:hover {
    border-color: var(--main-color);
    transform: scale(1.02);
}

.services-box i {
    font-size: 7rem;
    color: var(--main-color)
}

.services-box h3 {
    font-size: 2.6rem;
}

.services-box p {
    font-size: 1.6rem;
    margin: 1rem 0 3rem;
}

.portfolio {
    background: var(--second-bg-color);
}

.portfolio h2 {
    margin-bottom: 4rem;
}

.portfolio-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    align-items: center;
    gap: 2.5rem;
}

.portfolio-container .portfolio-box {
    position: relative;
    border-radius: 2rem;
    box-shadow: 0 0 1rem var(--bg-color);
    overflow: hidden;
    /*clips any content that overflows the element's box, essentially hiding the overflow.*/
    display: flex;
}

.portfolio-box img {
    width: 100%;
    /* Adjust the percentage value as needed */
    height: 200px;
    /* Set a fixed height for all images */
    object-fit: cover;
    /* Ensure the entire image is visible within the defined height */
}

.portfolio-box:hover img {
    transform: scale(1.1);
    transition: .5s ease;
}

.portfolio-box .portfolio-layer {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(0, 0, 0, .1), var(--main-color));
    /* the rgba .1 thing affects opaqueness of the overlay*/
    display: flex;
    justify-content: center;
    /* centers the stuff within the layer horizontally along the main (portfolio box) axis. In this case the words like web design and the paragraph are centered*/
    align-items: center;
    flex-direction: column;
    text-align: center;
    padding: 0 4rem;
    transform: translateY(100%);
    /*(moves) an element vertically along the y-axis*/
    transition: .5s ease;
}

.portfolio-box:hover .portfolio-layer {
    transform: translateY(0);
}

.portfolio-layer h4 {
    font-size: 3rem;
}

.portfolio-layer p {
    font-size: 1.6rem;
    margin: .3rem 0 1rem;
}

.portfolio-layer a {
    display: inline-flex;
    /* it respects surrounding content and does not start on a new line. It allows other inline content to flow around it.
    The element becomes a flex container, which means it can contain flex items (its children) and can use flexbox properties to control the layout and alignment of those items.*/
    justify-content: center;
    align-items: center;
    width: 5rem;
    height: 5rem;
    background: var(--text-color);
    border-radius: 50%;
}

.portfolio a i {
    font-size: 2rem;
    color: var(--second-bg-color);
}

.contact h2 {
    margin-bottom: 3rem;
}

.contact form {
    max-width: 70rem;
    margin: 1rem auto;
    text-align: center;
    margin-bottom: 3rem;
}

.contact form .input-box {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    /*flex-wrap: wrap;: This property specifies whether the flex items should wrap onto multiple lines or stay on a single line within the flex container.*/
}

.contact form .input-box input,
.contact form textarea {
    /*padding property defines the space between the content of an element and its border.
    The margin property defines the space around an element, outside its border. */
    width: 100%;
    padding: 1.5rem;
    /*padding makes space around the words in box*/
    font-size: 1.6rem;
    color: var(--text-color);
    background: var(--second-bg-color);
    border-radius: .8rem;
    margin: .7rem 0
        /*margin makes space around box*/
}

.contact form .input-box input {
    width: 49%;
}

.contact form textarea {
    resize: none;
    /*makes the text box unflexible in size, you cannot drag edges to be smaller or bigger, if you put "both" instead of none then you can*/
}

.contact form .btn {
    margin-top: 2rem;
    cursor: pointer;
    /*makes cursor change to another one when hover to show it is interactable */
}

.footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    padding: 2rem 9%;
    background: var(--second-bg-color);
}

.footer-text p {
    font-size: 1.6rem;
}

.footer-iconTop a {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: .8rem;
    background: var(--main-color);
    border-radius: .8rem;
    transition: .5s ease;
}

.footer-iconTop a i {
    font-size: 2.4rem;
    color: var(--second-bg-color);
}

.footer-iconTop a:hover {
    box-shadow: 0 0 1rem var(--main-color);

}

/* Breakpoints, Breakpoints are specific screen widths where the layout of the webpage changes to accommodate different screen sizes.*/

/* applies styles when the viewport width is at most 1200 pixels wide */
@media (max-width: 1200px) {
    html {
        font-size: 55%;
    }
}

@media (max-width: 991px) {
    .header {
        padding: 2rem 3%;
    }

    section {
        padding: 10rem 3% 2rem;
    }

    .services {
        padding-bottom: 7rem;
    }

    .portfolio {
        padding-bottom: 7rem;
    }

    .contact {
        min-height: auto;
    }

    .footer {
        padding: 2rem 3%;
    }
}


@media (max-width: 768px) {

    /* Add menu for navbar when the viewport width is at most 768 pixels wide */
    #menu-icon {
        display: block;
    }

    /* Push navbar to bottom when the viewport width is at most 768 pixels wide */
    .navbar {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        padding: 1rem 3%;
        background: var(--bg-color);
        border-top: .1rem solid rgba(0, 0, 0, .2);
        box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
        display: none;
    }

    /* when navbar active class is present */
    .navbar.active {
        display: block;
    }

    /* Stacks the tabs inside navbar when viewport width is at most 768 px because display: block. display: block;: This property sets the display type of the <a> elements to block. Block-level elements start on a new line and take up the full width available.  */
    .navbar a {
        display: block;
        font-size: 2rem;
        margin: 3rem 0;
    }

    .home {
        /* apply flex-direction: column; to the container, causing its flex items to be stacked vertically within it. Makes the image stack with other stuff instead of displaying to side */
        flex-direction: column;
    }

    .home-content h3 {
        font-size: 2.6rem;
    }

    .home-content h1 {
        font-size: 5rem;
    }

    .home-img img {
        width: 70vw;
        margin-top: 4rem;
    }

    .about {
        /* bottom to top stacking */
        flex-direction: column-reverse;
    }

    .about img {
        width: 70vw;
        margin-top: 4rem;
    }

    .services h2 {
        margin-bottom: 3rem;
    }

    .portfolio h2 {
        margin-bottom: 3rem;
    }

    .portfolio-container {
        /* each column should take up an equal portion of the available space, defined by 1fr */
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 617px) {
    .portfolio-container {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 450px) {
    html {
        font-size: 50%;
    }

    .contact form .input-box input {
        width: 100%;
    }
}


@media (max-width: 365px) {
    .home-img img {
        width: 90vw;
    }

    .about-img img {
        width: 90vw;
    }

    .footer {
        flex-direction: column-reverse;
        ;
    }

    .footer p {
        text-align: center;
        margin-top: 2rem;
    }
}